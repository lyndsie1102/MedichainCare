services:
  blockchain:
    build:
      context: ./blockchain
    ports:
      - "7545:7545"
    environment:
      - GANACHE_NETWORK_ID=5777
    volumes:
      - ./blockchain:/workspace
      - ./data:/workspace/data
      - ./frontend/src/abis:/workspace/frontend/src/abis

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=healthcare_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db

  # Backend Service
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/healthcare_db
      - FASTAPI_APP=main.py
      - FASTAPI_ENV=development
    depends_on:
      - blockchain
      - db

  # Frontend Service
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/workspace
      - /workspace/node_modules 
    environment:
      - NODE_ENV=development
      - GANACHE_URL=http://blockchain:7545
    depends_on:
      - blockchain

  # Frontend Test Service
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    command: ["npm", "test"]

  # Backend Test Service
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    command: ["pytest", "-v", "--maxfail=1", "--disable-warnings"]
    depends_on:
      - backend
    volumes:
      - ./backend:/app
    environment:
      - FASTAPI_ENV=test

  # Blockchain test service
  blockchain-test:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.test
    command: truffle test --network docker
    depends_on:
      - blockchain          
    volumes:
      - ./blockchain:/workspace

volumes:
  postgres_data: {}